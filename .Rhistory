mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 2) +
labs(
title = "Win Rates Across Rating Differences (Smoothed)",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey")) +
theme_minimal()
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.5) +
labs(
title = "Win Rates Across Rating Differences (Smoothed)",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey")) +
theme_minimal()
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1) +
labs(
title = "Win Rates Across Rating Differences (Smoothed)",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey")) +
theme_minimal()
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "Win Rates Across Rating Differences (Smoothed)",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey")) +
theme_minimal()
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "Win Rates Across Rating Differences (Smoothed)",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey")) +
theme_minimal()
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c"Black", "Draw", "White") +
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c("Black", "Draw", "White") +
theme_minimal()
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c("Black", "Draw", "White")) +
theme_minimal()
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c("Black", "Draw", "White")) +
theme_minimal() +
theme(axis.line = element_line(size = 2))
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_vline(xintercept = 0, color = "black", linewidth = 2) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c("Black", "Draw", "White")) +
theme_minimal() +
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
geom_vline(xintercept = 0, color = "black", linewidth = 2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c("Black", "Draw", "White")) +
theme_minimal() +
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c("Black", "Draw", "White")) +
theme_minimal() +
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_vline(xintercept = 0, color = "black", linewidth = 2) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c("Black", "Draw", "White")) +
theme_minimal()
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_vline(xintercept = 0, color = "black", linewidth = 1) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c("Black", "Draw", "White")) +
theme_minimal()
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_vline(xintercept = 0, color = "black", linewidth = 1) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c("Black", "Draw", "White")) +
theme_minimal()
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_vline(xintercept = 0, color = "black", linewidth = 1) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference (White - Black)",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c("Black", "Draw", "White")) +
theme_minimal()
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_vline(xintercept = 0, color = "black", linewidth = 1) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference (White Rating - Black Rating)",
y = "Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c("Black", "Draw", "White")) +
theme_minimal()
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_vline(xintercept = 0, color = "black", linewidth = 1) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference (White Rating - Black Rating)",
y = "Outcome Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c("Black", "Draw", "White")) +
theme_minimal()
# Get data and add bins so it's pretty
ratings <- read.csv("UseableCSV/rating_wins.csv")
ratings$bins <- cut(ratings$rate_diff,
breaks = seq(min(ratings$rate_diff),
max(ratings$rate_diff), by = 50))
# Calculate total count for each rating difference
ratings_summary <- ratings %>%
group_by(rate_diff) %>%
mutate(total_count = sum(count)) %>%
ungroup()
# Calculate proportions for each winner
ratings_proportions <- ratings_summary %>%
mutate(proportion = count / total_count)
# Plot with smoothing because it is not pretty otherwise
ggplot(ratings_proportions, aes(x = rate_diff, y = proportion,
color = winner)) +
geom_vline(xintercept = 0, color = "black", linewidth = 1) +
geom_smooth(method = "loess", se = FALSE, span = 0.3, linewidth = 1.2) +
labs(
title = "I'm Better Than My Opponent",
x = "Rating Difference (White Rating - Black Rating)",
y = "Outcome Proportion",
color = "Winner"
) +
scale_color_manual(
values = c("black", "blue", "grey"),
labels = c("Black", "Draw", "White")) +
theme_bw()
inputPanel(
sliderInput("w_rat", "White Rating", min = 0, max = 200, step = 10, value = 100)  # Provide an initial value
)
