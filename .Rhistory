color=lame_color, size=5) +
# Graph labelled points
geom_point(data=special_p, aes(x=Pop65, y=GovPen),
fill=special_point_color, size=5,
color="black", pch=21) +
# Add labels because they are bad by default and I couldn't figure out how to
# place them automatically in a way that was nice.
geom_text(aes(x=6.25, y=13.5, size=6, label="Brazil"), fontface="bold") +
geom_text(aes(x=22.25, y=8.5, size=6, label="OECD average"), fontface="italic") +
geom_text(aes(x=3.5, y=2.75, size=6, label="Mexico")) +
geom_text(aes(x=5, y=8.5, size=6, label="Turkey")) +
geom_text(aes(x=13.5, y=12.25, size=6, label="Poland")) +
geom_text(aes(x=15, y=1.25, size=6, label="South Korea")) +
geom_text(aes(x=19.75, y=6, size=6, label="United States")) +
geom_text(aes(x=29.25, y=11.5, size=6, label="Japan")) +
geom_text(aes(x=17.5, y=15.75, size=6, label="France")) +
geom_text(aes(x=24.55, y=14, size=6, label="Greece")) +
geom_text(aes(x=24, y=17.25, size=6, label="Italy")) +
# -- Make it look like the website --
labs(title="Brazil's golden oldie blowout\nLatest Available",
subtitle="Government spending\non pension benefits\n% of GDP",
x="Population aged 65 years and over, % of total",
caption = "Sources: OECD, World Bank, Previdência Social"
) +
theme_minimal() +
theme(
# Aesthetics
legend.position = "none",
plot.background = element_rect(fill=background_color),
# Remove extra lines and axis
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.title.y = element_blank(),
# Fix lines
panel.grid.major = element_line(color="#849196", size=0.2),
# Caption position
plot.caption = element_text(hjust = 0, color="gray54"),
plot.subtitle = element_text(hjust = 1)
) +
# Fix axis and scale
coord_fixed(1) +
scale_x_continuous(limits = c(0, 30),
breaks=c(0, 5, 10, 15, 20, 25, 30)) +
scale_y_continuous(limits = c(0, 20),
position = "right",
breaks=c(0, 5, 10, 15, 20))
# Graph it
# Government spending\n on pension benefits\n % of GDP
ggplot() +
# Graph background points
geom_point(data=back_p, aes(x=Pop65, y=GovPen, alpha=0.9),
color=lame_color, size=5) +
# Graph labelled points
geom_point(data=special_p, aes(x=Pop65, y=GovPen),
fill=special_point_color, size=5,
color="black", pch=21) +
# Add labels because they are bad by default and I couldn't figure out how to
# place them automatically in a way that was nice.
geom_text(aes(x=6.25, y=13.5, size=6, label="Brazil"), fontface="bold") +
geom_text(aes(x=22.25, y=8.5, size=6, label="OECD average"), fontface="italic") +
geom_text(aes(x=3.5, y=2.75, size=6, label="Mexico")) +
geom_text(aes(x=5, y=8.5, size=6, label="Turkey")) +
geom_text(aes(x=13.5, y=12.25, size=6, label="Poland")) +
geom_text(aes(x=15, y=1.25, size=6, label="South Korea")) +
geom_text(aes(x=19.75, y=6, size=6, label="United States")) +
geom_text(aes(x=29.25, y=11.5, size=6, label="Japan")) +
geom_text(aes(x=17.5, y=15.75, size=6, label="France")) +
geom_text(aes(x=24.55, y=14, size=6, label="Greece")) +
geom_text(aes(x=24, y=17.25, size=6, label="Italy")) +
# -- Make it look like the website --
labs(title="Brazil's golden oldie blowout\nLatest Available",
subtitle="Government spending\non pension benefits\n% of GDP",
x="Population aged 65 years and over, % of total",
caption = "Sources: OECD, World Bank, Previdência Social"
) +
theme_minimal() +
theme(
# Aesthetics
legend.position = "none",
plot.background = element_rect(fill=background_color),
# Remove extra lines and axis
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.title.y = element_blank(),
# Fix lines
panel.grid.major = element_line(color="#849196, size=0.2),
# Caption position
plot.caption = element_text(hjust = 0, color="gray54"),
# Graph it
# Government spending\n on pension benefits\n % of GDP
ggplot() +
# Graph background points
geom_point(data=back_p, aes(x=Pop65, y=GovPen, alpha=0.9),
color=lame_color, size=5) +
# Graph labelled points
geom_point(data=special_p, aes(x=Pop65, y=GovPen),
fill=special_point_color, size=5,
color="black", pch=21) +
# Add labels because they are bad by default and I couldn't figure out how to
# place them automatically in a way that was nice.
geom_text(aes(x=6.25, y=13.5, size=6, label="Brazil"), fontface="bold") +
geom_text(aes(x=22.25, y=8.5, size=6, label="OECD average"), fontface="italic") +
geom_text(aes(x=3.5, y=2.75, size=6, label="Mexico")) +
geom_text(aes(x=5, y=8.5, size=6, label="Turkey")) +
geom_text(aes(x=13.5, y=12.25, size=6, label="Poland")) +
geom_text(aes(x=15, y=1.25, size=6, label="South Korea")) +
geom_text(aes(x=19.75, y=6, size=6, label="United States")) +
geom_text(aes(x=29.25, y=11.5, size=6, label="Japan")) +
geom_text(aes(x=17.5, y=15.75, size=6, label="France")) +
geom_text(aes(x=24.55, y=14, size=6, label="Greece")) +
geom_text(aes(x=24, y=17.25, size=6, label="Italy")) +
# -- Make it look like the website --
labs(title="Brazil's golden oldie blowout\nLatest Available",
subtitle="Government spending\non pension benefits\n% of GDP",
x="Population aged 65 years and over, % of total",
caption = "Sources: OECD, World Bank, Previdência Social"
) +
theme_minimal() +
theme(
# Aesthetics
legend.position = "none",
plot.background = element_rect(fill=background_color),
# Remove extra lines and axis
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.title.y = element_blank(),
# Fix lines
panel.grid.major = element_line(color="#849196"),
# Caption position
plot.caption = element_text(hjust = 0, color="gray54"),
plot.subtitle = element_text(hjust = 1)
) +
# Fix axis and scale
coord_fixed(1) +
scale_x_continuous(limits = c(0, 30),
breaks=c(0, 5, 10, 15, 20, 25, 30)) +
scale_y_continuous(limits = c(0, 20),
position = "right",
breaks=c(0, 5, 10, 15, 20))
# Make custom colors
colors = c("#2fb9c8", "#849196", "#849196",
"#849196", "#849196", "#849196",
"grey", "#849196", "#849196",
"#849196", "#849196")
ggplot(spending_ratio, aes(x = reorder(Country, ratio), y = ratio,
fill=Country)) +
geom_col() +
# Make horizontal
coord_flip() +
# Relabel
labs(title = "Ratio of Governement Spending on Pension Benefits to\n
percentage of population over 65",
y = "Ratio") +
# Make pretty
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
#plot.title = element_text(hjust = 0.5),
legend.position = "none",
plot.margin = margin(t=10, r=30, b=10, l=10)) +
# Add colors
scale_fill_manual(values=colors) +
# Mess with scales
scale_y_continuous(n.breaks = 8)
# Make custom colors
colors = c("#2fb9c8", "#849196", "#849196",
"#849196", "#849196", "#849196",
"grey", "#849196", "#849196",
"#849196", "#849196")
ggplot(spending_ratio, aes(x = reorder(Country, ratio), y = ratio,
fill=Country)) +
geom_col() +
# Make horizontal
coord_flip() +
# Relabel
labs(title = "Ratio of Governement Spending on Pension Benefits to
percentage of population over 65",
y = "Ratio") +
# Make pretty
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
#plot.title = element_text(hjust = 0.5),
legend.position = "none",
plot.margin = margin(t=10, r=30, b=10, l=10)) +
# Add colors
scale_fill_manual(values=colors) +
# Mess with scales
scale_y_continuous(n.breaks = 8)
# Make custom colors
colors = c("#2fb9c8", "#849196", "#849196",
"#849196", "#849196", "#849196",
"grey", "#849196", "#849196",
"#849196", "#849196")
ggplot(spending_ratio, aes(x = reorder(Country, ratio), y = ratio,
fill=Country)) +
geom_col() +
# Make horizontal
coord_flip() +
# Relabel
labs(title = "Ratio of Governement Spending on Pension Benefits to
percentage of population over 65",
y = "Ratio") +
# Make pretty
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
plot.title = element_text(hjust = 0),
legend.position = "none",
plot.margin = margin(t=10, r=30, b=10, l=10)) +
# Add colors
scale_fill_manual(values=colors) +
# Mess with scales
scale_y_continuous(n.breaks = 8)
# Make custom colors
colors = c("#2fb9c8", "#849196", "#849196",
"#849196", "#849196", "#849196",
"grey", "#849196", "#849196",
"#849196", "#849196")
ggplot(spending_ratio, aes(x = reorder(Country, ratio), y = ratio,
fill=Country)) +
geom_col() +
# Make horizontal
coord_flip() +
# Relabel
labs(title = "Ratio of Governement Spending on Pension Benefits to
percentage of population over 65",
y = "Ratio") +
# Make pretty
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
plot.title = element_text(hjust = 0),
legend.position = "none",
plot.margin = margin(t=10, r=30, b=10, l=10)) +
# Add colors
scale_fill_manual(values=colors) +
# Mess with scales
scale_y_continuous(n.breaks = 8)
# Make custom colors
colors = c("#2fb9c8", "#849196", "#849196",
"#849196", "#849196", "#849196",
"grey", "#849196", "#849196",
"#849196", "#849196")
ggplot(spending_ratio, aes(x = reorder(Country, ratio), y = ratio,
fill=Country)) +
geom_col() +
# Make horizontal
coord_flip() +
# Relabel
labs(title = "Ratio of Governement Spending on Pension Benefits to
percentage of population over 65",
y = "Ratio") +
# Make pretty
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
#plot.title = element_text(hjust = 0),
legend.position = "none",
plot.margin = margin(t=10, r=30, b=10, l=10)) +
# Add colors
scale_fill_manual(values=colors) +
# Mess with scales
scale_y_continuous(n.breaks = 8)
# Make custom colors
colors = c("#2fb9c8", "#849196", "#849196",
"#849196", "#849196", "#849196",
"grey", "#849196", "#849196",
"#849196", "#849196")
ggplot(spending_ratio, aes(x = reorder(Country, ratio), y = ratio,
fill=Country)) +
geom_col() +
# Make horizontal
coord_flip() +
# Relabel
labs(title = "Ratio of Governement Spending on Pension Benefits to
percentage of population over 65",
y = "Ratio") +
# Make pretty
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
legend.position = "none",
plot.margin = margin(t=10, r=30, b=10, l=10)) +
# Add colors
scale_fill_manual(values=colors) +
# Mess with scales
scale_y_continuous(n.breaks = 8)
library(tidyverse)
iah <- read_csv("https://raw.githubusercontent.com/kitadasmalley/Teaching/main/DATA502/FA2023/R_Markdown/Week8/iah_flightSummary.csv")
str(iah)
# make sure days of week are displayed in the right order
iah$DayOfWeek <- factor(iah$DayOfWeek,
levels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"))
p <- ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = prop_over_15))
p
# make sure days of week are displayed in the right order
iah$DayOfWeek <- factor(iah$DayOfWeek,
levels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"))
p <- ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = prop_over_15)) +
coord_fixed
# make sure days of week are displayed in the right order
iah$DayOfWeek <- factor(iah$DayOfWeek,
levels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"))
p <- ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = prop_over_15)) +
coord_fixed()
p
p + scale_fill_gradient()
p + scale_fill_gradient("Proportion",
high = "white", low = "springgreen4")
p + scale_fill_gradient("Proportion",
high = "red", low = "white")
p + scale_fill_gradient("Proportion",
high = "red", low = "yellow")
p + scale_fill_gradient("Proportion",
high = "red", low = "#eeee00")
p + scale_fill_gradient("Proportion",
high = "red", low = "#cccc00")
p + scale_fill_gradient("Proportion",
high = "red", low = "#ffff77")
# install.packages("colorspace")
library(colorspace)
install.packages("colorspace")
library(colorspace)
hcl_palettes(plot = TRUE)
# install.packages("colorspace")
library(colorspace)
hcl_palettes(plot = TRUE)
p + scale_fill_continuous_sequential("Mint")
p + scale_fill_continuous_sequential("OrYel")
p + scale_fill_continuous_sequential("Heat2")
p + scale_fill_continuous_sequential("Blue-Yellow")
p + scale_fill_continuous_sequential("Blue-Red")
p + scale_fill_continuous_sequential("Red-Blue")
p +  scale_fill_continuous_diverging("Blue-Red")
ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = avg_delay_delayed)) +
scale_fill_gradient()
ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = avg_delay_delayed)) +
scale_fill_gradient()
library(tidyverse)
iah <- read_csv("https://raw.githubusercontent.com/kitadasmalley/Teaching/main/DATA502/FA2023/R_Markdown/Week8/iah_flightSummary.csv")
str(iah)
ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = avg_delay_delayed)) +
scale_fill_gradient()
ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = avg_delay_delayed)) +
scale_fill_gradient() +
coord_fixed()
ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = avg_delay_delayed)) +
scale_fill_gradient(limits = c(0, 120))
ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = avg_delay_delayed)) +
scale_fill_gradient(limits = c(0, 120)) +
coord_fixed()
ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = log10(avg_delay_delayed))) +
scale_fill_gradient() +
coord_fixed()
iah <- iah %>%
mutate(avg_delay_cut = cut(avg_delay, breaks = c(-5, 0, 15, 30, 60, 1000)))
ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = avg_delay_cut))  +
scale_fill_discrete_sequential("Mint") +
coord_fixed()
hcl_palettes(plot = TRUE)
ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = avg_delay_cut))  +
scale_fill_discrete_sequential("Vik") +
coord_fixed()
ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = avg_delay_cut))  +
scale_fill_diverging("Vik") +
coord_fixed()
ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = avg_delay_cut))  +
scale_fill_discrete_diverging("Vik") +
coord_fixed()
ggplot(iah, aes(DepHour, DayOfWeek)) +
geom_tile(aes(fill = avg_delay_cut))  +
scale_fill_discrete_sequential("Sunset") +
coord_fixed()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#selectInput("player", "Select Player(s):",
#              choices = c("white", "black", "both"),
#              selected = "both", multiple = TRUE)
moves <- read.csv("UseableCSV/move_count.csv")
#selectInput("player", "Select Player(s):",
#              choices = c("white", "black", "both"),
#              selected = "both", multiple = TRUE)
moves <- read.csv("UseableCSV/move_count.csv")
#selectInput("player", "Select Player(s):",
#              choices = c("white", "black", "both"),
#              selected = "both", multiple = TRUE)
moves <- read.csv("UseableCSV/move_count.csv")
#selectInput("player", "Select Player(s):",
#              choices = c("white", "black", "both"),
#              selected = "both", multiple = TRUE)
moves <- read.csv("./UseableCSV/move_count.csv")
#selectInput("player", "Select Player(s):",
#              choices = c("white", "black", "both"),
#              selected = "both", multiple = TRUE)
moves <- read.csv("UseableCSV/move_count.csv")
# Get Data
check_o <- read.csv("UseableCSV/check_origins.csv")
check_o <- read.csv("UseableCSV/check_origins.csv")
check_o <- read.csv("./UseableCSV/check_origins.csv")
check_o <- read.csv("./UseableCSV/check_origins.csv")
getwd()
setwd("C:/Users/levin/Documents/Willamette/DATA502 - Data Vis/Chess")
getwd()
check_o <- read.csv("UseableCSV/check_origins.csv")
check_o <- read.csv("UseableCSV/check_origins.csv")
check_o <- read.csv("UseableCSV/check_origins.csv")
clear
check_o <- read.csv("UseableCSV/check_origins.csv")
check_o <- read.csv("UseableCSV/check_origins.csv")
check_o <- read.csv("UseableCSV/check_origins.csv")
check_o <- read.csv("UseableCSV/check_origins.csv")
getwrd()
getwrd()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
getwrd()
getwd()
#check_o <- read.csv("UseableCSV/check_origins.csv")
check_o <- read.csv("UseableCSV/check_origins.csv")
check_o <- read.csv("UseableCSV/check_origins.csv", header = TRUE, row.names = NULL)
head(check_o)
check_o <- read.csv("UseableCSV/check_origins.csv", header = TRUE, row.names = NULL)
head(check_o)
# - Get king square
check_o <- check_o %>%
rowwise() %>%
mutate(pos = list(square_to_pos(king_pos))) %>%
unnest_wider(pos, names_sep = "_") %>%
rename(x = pos_1, y = pos_2)
square_to_pos <- function(square) {
# Calculate the x and y positions
x <- (square %% 8) + 1
y <- (square %/% 8) + 1
return(c(x, y))
}
check_o <- read.csv("UseableCSV/check_origins.csv", header = TRUE, row.names = NULL)
# - Get king square
check_o <- check_o %>%
rowwise() %>%
mutate(pos = list(square_to_pos(king_pos))) %>%
unnest_wider(pos, names_sep = "_") %>%
rename(x = pos_1, y = pos_2)
check_o <- read.csv("UseableCSV/check_origins.csv", header = TRUE, row.names = NULL)
head(check_o)
# - Get king square
check_o <- check_o %>%
rowwise() %>%
mutate(pos = list(square_to_pos(king_pos))) %>%
unnest_wider(pos, names_sep = "_") %>%
rename(x = pos_1, y = pos_2)
check_o <- read.csv("UseableCSV/check_origins.csv", header = TRUE, row.names = FALSE)
check_o <- read.csv("UseableCSV/check_origins.csv", header = TRUE, row.names = FALSE)
check_o <- read.csv("UseableCSV/check_origins.csv", header = TRUE)
check_o <- read.csv("UseableCSV/check_origins.csv", header = TRUE, row.names = NULL)
head(check_o)
# - Get king square
check_o <- check_o %>%
rowwise() %>%
mutate(pos = list(square_to_pos(king_pos))) %>%
unnest_wider(pos, names_sep = "_") %>%
rename(x = pos_1, y = pos_2)
check_o <- read.csv("UseableCSV/check_origins.csv", header = TRUE, row.names = NULL, sep = ",", quote = "")
head(check_o)
# - Get king square
check_o <- check_o %>%
rowwise() %>%
mutate(pos = list(square_to_pos(king_pos))) %>%
unnest_wider(pos, names_sep = "_") %>%
rename(x = pos_1, y = pos_2)
check_o <- read.csv("UseableCSV/check_origins.csv")
head(check_o)
# - Get king square
check_o <- check_o %>%
rowwise() %>%
mutate(pos = list(square_to_pos(king_pos))) %>%
unnest_wider(pos, names_sep = "_") %>%
rename(x = pos_1, y = pos_2)
head(check_o)
# - Get check from square
check_o <- check_o %>%
rowwise() %>%
mutate(pos = list(square_to_pos(check_square))) %>%
unnest_wider(pos, names_sep = "_") %>%
rename(check_x = pos_1, check_y = pos_2)
head(check_o)
